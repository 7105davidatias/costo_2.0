# Production Dockerfile
# מערכת ניהול אומדני עלויות רכש - Production Build

# ==============================================================================
# BUILD STAGE
# ==============================================================================
FROM node:18-alpine AS builder

LABEL maintainer="Procurement System Team"
LABEL description="Production build for Hebrew RTL AI-powered procurement system"
LABEL version="1.0.0"

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    cairo-dev \
    jpeg-dev \
    pango-dev \
    musl-dev \
    giflib-dev

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci --include=dev

# Copy source code
COPY . .

# Build application
RUN npm run build

# Remove dev dependencies after build
RUN npm prune --production

# ==============================================================================
# PRODUCTION STAGE
# ==============================================================================
FROM node:18-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache \
    tini \
    dumb-init \
    curl \
    postgresql-client \
    tzdata \
    ca-certificates

# Create app user and group
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package*.json ./

# Copy additional files
COPY --chown=nodejs:nodejs shared ./shared
COPY --chown=nodejs:nodejs scripts ./scripts

# Create necessary directories
RUN mkdir -p /app/uploads /var/log/procurement && \
    chown -R nodejs:nodejs /app/uploads /var/log/procurement

# Set timezone
ENV TZ=Asia/Jerusalem
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Environment variables
ENV NODE_ENV=production
ENV PORT=5000
ENV HOST=0.0.0.0

# Security: Remove unnecessary files
RUN rm -rf /app/client /app/server /app/tests /app/*.md /app/.git* || true

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE $PORT

# Use tini as init system
ENTRYPOINT ["/sbin/tini", "--"]

# Start application
CMD ["node", "dist/index.js"]

# ==============================================================================
# BUILD METADATA
# ==============================================================================
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

LABEL org.label-schema.build-date=$BUILD_DATE
LABEL org.label-schema.name="procurement-system"
LABEL org.label-schema.description="Hebrew RTL AI-powered procurement cost estimation system"
LABEL org.label-schema.url="https://github.com/yourorg/procurement-system"
LABEL org.label-schema.vcs-ref=$VCS_REF
LABEL org.label-schema.vcs-url="https://github.com/yourorg/procurement-system"
LABEL org.label-schema.vendor="Your Organization"
LABEL org.label-schema.version=$VERSION
LABEL org.label-schema.schema-version="1.0"