# פרומפט ליצירת דשבורדים מותאמים לכל תפקיד - Replit Agent

## מצב נוכחי ובעיה שזוהתה

המערכת כרגע מציגה את אותו דשבורד כללי לכל המשתמשים, ללא קשר לתפקידם. כפי שניתן לראות בצילום המסך שצורף, משתמש קב"ט רואה נתונים שאינם רלוונטיים לתפקידו:
- מדד דיוק AI (90.8%)
- עליות מחירים (₪175,000)
- חיסכון מצטבר (₪991,000)
- סה"כ הוצאה חזויה (₪7,966,000)

**הבעיה:** כל המשתמשים רואים את אותו ממשק, במקום ממשקים מותאמים לפונקציונליות הייחודית של כל תפקיד.

## הפתרון הנדרש

יש ליצור 4 דשבורדים נפרדים ומותאמים, כאשר המערכת תציג את הדשבורד המתאים לפי תפקיד המשתמש שהתחבר.

## שלב 1: יצירת דשבורד מנהל מערכת

צור קובץ חדש: `src/components/SystemAdminDashboard.jsx`

```javascript
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Users, Server, Shield, Activity, Settings, UserPlus, AlertTriangle, CheckCircle } from 'lucide-react';

const SystemAdminDashboard = ({ onLogout }) => {
  const [systemStats, setSystemStats] = useState({
    totalUsers: 12,
    activeUsers: 8,
    systemUptime: '99.9%',
    securityAlerts: 2,
    totalEstimates: 156,
    systemLoad: '45%',
    storageUsed: '67%',
    lastBackup: '2024-01-15 02:00'
  });

  const [recentActivity, setRecentActivity] = useState([
    {
      id: 1,
      type: 'user_login',
      user: 'רחל לוי (כלכלן)',
      action: 'התחברות למערכת',
      timestamp: 'לפני 5 דקות',
      status: 'success'
    },
    {
      id: 2,
      type: 'estimate_created',
      user: 'משה אברהם (איש רכש)',
      action: 'יצירת אומדן REQ-2024-018',
      timestamp: 'לפני 15 דקות',
      status: 'success'
    },
    {
      id: 3,
      type: 'security_alert',
      user: 'מערכת',
      action: 'התראת ביטחון - ניסיון גישה חשוד',
      timestamp: 'לפני שעה',
      status: 'warning'
    }
  ]);

  const [users, setUsers] = useState([
    { id: 1, name: 'דוד כהן', email: 'admin@company.com', role: 'מנהל מערכת', status: 'פעיל', lastLogin: '2024-01-15 14:30' },
    { id: 2, name: 'רחל לוי', email: 'economist@company.com', role: 'כלכלן', status: 'פעיל', lastLogin: '2024-01-15 14:25' },
    { id: 3, name: 'משה אברהם', email: 'procurement@company.com', role: 'איש רכש', status: 'פעיל', lastLogin: '2024-01-15 13:45' },
    { id: 4, name: 'שרה דוד', email: 'security@company.com', role: 'קב"ט', status: 'פעיל', lastLogin: '2024-01-15 12:30' }
  ]);

  return (
    <div className="min-h-screen bg-gray-50 rtl">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex justify-between items-center">
            <div className="flex items-center gap-4">
              <Settings className="h-8 w-8 text-blue-600" />
              <h1 className="text-2xl font-bold text-gray-900">מרכז בקרת מנהל מערכת</h1>
            </div>
            <div className="flex items-center gap-4">
              <Badge variant="outline" className="bg-blue-50 text-blue-700 border-blue-200">
                <Users className="h-4 w-4 mr-2" />
                מנהל מערכת
              </Badge>
              <Button variant="outline" size="sm" onClick={onLogout}>
                יציאה
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* סטטיסטיקות מערכת */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Users className="h-8 w-8 text-blue-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">משתמשים במערכת</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-blue-600">{systemStats.totalUsers}</div>
              <p className="text-sm text-gray-500">{systemStats.activeUsers} פעילים כעת</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Server className="h-8 w-8 text-green-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">זמינות מערכת</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-green-600">{systemStats.systemUptime}</div>
              <p className="text-sm text-gray-500">עומס: {systemStats.systemLoad}</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Shield className="h-8 w-8 text-red-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">התראות ביטחון</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-red-600">{systemStats.securityAlerts}</div>
              <p className="text-sm text-gray-500">דורשות טיפול</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Activity className="h-8 w-8 text-purple-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">אומדנים כולל</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-purple-600">{systemStats.totalEstimates}</div>
              <p className="text-sm text-gray-500">החודש</p>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
          {/* ניהול משתמשים */}
          <Card>
            <CardHeader>
              <div className="flex justify-between items-center">
                <CardTitle className="flex items-center gap-2">
                  <Users className="h-5 w-5" />
                  ניהול משתמשים
                </CardTitle>
                <Button size="sm" className="bg-blue-600 hover:bg-blue-700">
                  <UserPlus className="h-4 w-4 mr-2" />
                  הוסף משתמש
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {users.map(user => (
                  <div key={user.id} className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                    <div>
                      <div className="font-medium">{user.name}</div>
                      <div className="text-sm text-gray-600">{user.role}</div>
                      <div className="text-xs text-gray-500">כניסה אחרונה: {user.lastLogin}</div>
                    </div>
                    <div className="flex items-center gap-2">
                      <Badge className="bg-green-100 text-green-800">{user.status}</Badge>
                      <Button size="sm" variant="outline">ערוך</Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* פעילות מערכת */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Activity className="h-5 w-5" />
                פעילות מערכת אחרונה
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {recentActivity.map(activity => (
                  <div key={activity.id} className="flex items-start gap-3 p-3 bg-gray-50 rounded-lg">
                    <div className="mt-1">
                      {activity.status === 'success' ? (
                        <CheckCircle className="h-4 w-4 text-green-600" />
                      ) : (
                        <AlertTriangle className="h-4 w-4 text-orange-600" />
                      )}
                    </div>
                    <div className="flex-1">
                      <div className="font-medium text-sm">{activity.action}</div>
                      <div className="text-xs text-gray-600">{activity.user}</div>
                      <div className="text-xs text-gray-500">{activity.timestamp}</div>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* כלי ניהול מערכת */}
        <Card>
          <CardHeader>
            <CardTitle>כלי ניהול מערכת</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <Server className="h-6 w-6 mb-2" />
                <span className="font-medium">ניטור שרתים</span>
                <span className="text-xs text-gray-500">בדיקת ביצועים</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <Shield className="h-6 w-6 mb-2" />
                <span className="font-medium">הגדרות אבטחה</span>
                <span className="text-xs text-gray-500">מדיניות ביטחון</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <Activity className="h-6 w-6 mb-2" />
                <span className="font-medium">לוגי מערכת</span>
                <span className="text-xs text-gray-500">ביקורת פעילות</span>
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default SystemAdminDashboard;
```

## שלב 2: יצירת דשבורד כלכלן

צור קובץ חדש: `src/components/EconomistDashboard.jsx`

```javascript
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { DollarSign, TrendingUp, CheckCircle, Clock, FileText, BarChart3, Calculator, Target } from 'lucide-react';

const EconomistDashboard = ({ onLogout }) => {
  const [economicStats, setEconomicStats] = useState({
    pendingApprovals: 5,
    approvedThisMonth: 23,
    totalSavings: '₪1,250,000',
    averageAccuracy: '94.2%',
    budgetUtilization: '78%',
    costReduction: '12.5%'
  });

  const [pendingApprovals, setPendingApprovals] = useState([
    {
      id: 'REQ-2024-016',
      title: 'רכש 10 רכבי צי',
      amount: '₪2,400,000',
      submittedBy: 'משה אברהם',
      submittedDate: '2024-01-15',
      priority: 'גבוה',
      estimationMethod: 'אומדן פרמטרי',
      accuracy: '92%'
    },
    {
      id: 'REQ-2024-017',
      title: 'בניית מחסן חדש',
      amount: '₪5,200,000',
      submittedBy: 'משה אברהם',
      submittedDate: '2024-01-14',
      priority: 'בינוני',
      estimationMethod: 'אומדן מלמטה למעלה',
      accuracy: '89%'
    }
  ]);

  const [recentApprovals, setRecentApprovals] = useState([
    { id: 'REQ-2024-015', title: 'ציוד מחשוב למשרדים', amount: '₪450,000', status: 'אושר', date: '2024-01-14' },
    { id: 'REQ-2024-014', title: 'שירותי תחזוקה', amount: '₪280,000', status: 'אושר', date: '2024-01-13' },
    { id: 'REQ-2024-013', title: 'חומרי גלם', amount: '₪1,100,000', status: 'נדחה', date: '2024-01-12' }
  ]);

  return (
    <div className="min-h-screen bg-gray-50 rtl">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex justify-between items-center">
            <div className="flex items-center gap-4">
              <Calculator className="h-8 w-8 text-blue-600" />
              <h1 className="text-2xl font-bold text-gray-900">מרכז בקרת כלכלן</h1>
            </div>
            <div className="flex items-center gap-4">
              <Badge variant="outline" className="bg-blue-50 text-blue-700 border-blue-200">
                <DollarSign className="h-4 w-4 mr-2" />
                כלכלן
              </Badge>
              <Button variant="outline" size="sm" onClick={onLogout}>
                יציאה
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* סטטיסטיקות כלכליות */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Clock className="h-8 w-8 text-orange-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">ממתינים לאישור</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-orange-600">{economicStats.pendingApprovals}</div>
              <p className="text-sm text-gray-500">אומדנים</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <CheckCircle className="h-8 w-8 text-green-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">אושרו החודש</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-green-600">{economicStats.approvedThisMonth}</div>
              <p className="text-sm text-gray-500">אומדנים</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <TrendingUp className="h-8 w-8 text-blue-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">חיסכון כולל</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-blue-600">{economicStats.totalSavings}</div>
              <p className="text-sm text-gray-500">השנה</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Target className="h-8 w-8 text-purple-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">דיוק ממוצע</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-purple-600">{economicStats.averageAccuracy}</div>
              <p className="text-sm text-gray-500">אומדנים</p>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
          {/* תור אישורים */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Clock className="h-5 w-5 text-orange-600" />
                תור אומדנים לאישור
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {pendingApprovals.map(approval => (
                  <div key={approval.id} className="border rounded-lg p-4 bg-white shadow-sm">
                    <div className="flex justify-between items-start mb-3">
                      <div>
                        <h3 className="font-semibold text-lg">{approval.title}</h3>
                        <p className="text-gray-600 text-sm">מספר: {approval.id}</p>
                        <p className="text-sm text-gray-500">הוגש על ידי: {approval.submittedBy}</p>
                        <p className="text-sm text-gray-500">שיטה: {approval.estimationMethod}</p>
                      </div>
                      <div className="text-left">
                        <div className="text-xl font-bold text-blue-600">{approval.amount}</div>
                        <Badge className={
                          approval.priority === 'גבוה' ? 'bg-red-100 text-red-800' :
                          approval.priority === 'בינוני' ? 'bg-orange-100 text-orange-800' :
                          'bg-green-100 text-green-800'
                        }>
                          {approval.priority}
                        </Badge>
                        <div className="text-sm text-gray-500 mt-1">דיוק: {approval.accuracy}</div>
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <Button size="sm" className="bg-green-600 hover:bg-green-700">
                        <CheckCircle className="h-4 w-4 mr-1" />
                        אשר
                      </Button>
                      <Button size="sm" variant="outline">
                        בדוק פרטים
                      </Button>
                      <Button size="sm" variant="outline" className="text-red-600 border-red-300">
                        דחה
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* אישורים אחרונים */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <FileText className="h-5 w-5" />
                אישורים אחרונים
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {recentApprovals.map(approval => (
                  <div key={approval.id} className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                    <div>
                      <div className="font-medium text-sm">{approval.title}</div>
                      <div className="text-xs text-gray-600">{approval.id}</div>
                      <div className="text-xs text-gray-500">{approval.date}</div>
                    </div>
                    <div className="text-left">
                      <div className="font-bold text-sm">{approval.amount}</div>
                      <Badge className={
                        approval.status === 'אושר' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                      }>
                        {approval.status}
                      </Badge>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* דוחות כלכליים */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <BarChart3 className="h-5 w-5" />
              דוחות כלכליים ותובנות
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <Button variant="outline" className="h-24 flex flex-col justify-center">
                <TrendingUp className="h-6 w-6 mb-2 text-blue-600" />
                <span className="font-medium">דוח חיסכון חודשי</span>
                <span className="text-xs text-gray-500">ינואר 2024</span>
              </Button>
              <Button variant="outline" className="h-24 flex flex-col justify-center">
                <BarChart3 className="h-6 w-6 mb-2 text-green-600" />
                <span className="font-medium">ניתוח מגמות עלויות</span>
                <span className="text-xs text-gray-500">Q4 2023</span>
              </Button>
              <Button variant="outline" className="h-24 flex flex-col justify-center">
                <Target className="h-6 w-6 mb-2 text-purple-600" />
                <span className="font-medium">השוואת שיטות אומדן</span>
                <span className="text-xs text-gray-500">2023</span>
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default EconomistDashboard;
```

## שלב 3: יצירת דשבורד איש רכש

צור קובץ חדש: `src/components/ProcurementDashboard.jsx`

```javascript
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { ShoppingCart, Plus, Search, FileText, Clock, CheckCircle, AlertCircle, TrendingUp } from 'lucide-react';

const ProcurementDashboard = ({ onLogout, setCurrentView }) => {
  const [procurementStats, setProcurementStats] = useState({
    newRequests: 8,
    inProgress: 12,
    completed: 45,
    totalValue: '₪15,600,000',
    pendingApproval: 3,
    avgProcessingTime: '4.2 ימים'
  });

  const [newRequests, setNewRequests] = useState([
    {
      id: 'REQ-2024-018',
      title: 'רכש ציוד מחשוב למשרדים',
      description: '50 מחשבים נייחים + 20 מחשבים נישאים',
      status: 'חדש',
      priority: 'גבוה',
      deadline: '2024-02-01',
      estimatedValue: '₪750,000',
      department: 'מערכות מידע'
    },
    {
      id: 'REQ-2024-019',
      title: 'שירותי תחזוקה למתקנים',
      description: 'חוזה תחזוקה שנתי למתקני החברה',
      status: 'חדש',
      priority: 'בינוני',
      deadline: '2024-02-15',
      estimatedValue: '₪420,000',
      department: 'תפעול'
    },
    {
      id: 'REQ-2024-020',
      title: 'חומרי גלם לייצור',
      description: 'פלדה ואלומיניום לרבעון הבא',
      status: 'חדש',
      priority: 'גבוה',
      deadline: '2024-01-25',
      estimatedValue: '₪2,100,000',
      department: 'ייצור'
    }
  ]);

  const [myEstimates, setMyEstimates] = useState([
    {
      id: 'REQ-2024-016',
      title: 'רכש 10 רכבי צי',
      status: 'ממתין לאישור כלכלן',
      amount: '₪2,400,000',
      submittedDate: '2024-01-15',
      estimationMethod: 'אומדן פרמטרי',
      accuracy: '92%'
    },
    {
      id: 'REQ-2024-017',
      title: 'בניית מחסן חדש',
      status: 'ממתין לאישור כלכלן',
      amount: '₪5,200,000',
      submittedDate: '2024-01-14',
      estimationMethod: 'אומדן מלמטה למעלה',
      accuracy: '89%'
    }
  ]);

  return (
    <div className="min-h-screen bg-gray-50 rtl">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex justify-between items-center">
            <div className="flex items-center gap-4">
              <ShoppingCart className="h-8 w-8 text-green-600" />
              <h1 className="text-2xl font-bold text-gray-900">מרכז בקרת איש רכש</h1>
            </div>
            <div className="flex items-center gap-4">
              <Badge variant="outline" className="bg-green-50 text-green-700 border-green-200">
                <ShoppingCart className="h-4 w-4 mr-2" />
                איש רכש
              </Badge>
              <Button variant="outline" size="sm" onClick={onLogout}>
                יציאה
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* סטטיסטיקות רכש */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Plus className="h-8 w-8 text-blue-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">דרישות חדשות</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-blue-600">{procurementStats.newRequests}</div>
              <p className="text-sm text-gray-500">ממתינות לטיפול</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Clock className="h-8 w-8 text-orange-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">בעיבוד</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-orange-600">{procurementStats.inProgress}</div>
              <p className="text-sm text-gray-500">אומדנים</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <CheckCircle className="h-8 w-8 text-green-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">הושלמו</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-green-600">{procurementStats.completed}</div>
              <p className="text-sm text-gray-500">החודש</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <TrendingUp className="h-8 w-8 text-purple-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">ערך כולל</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-purple-600">{procurementStats.totalValue}</div>
              <p className="text-sm text-gray-500">השנה</p>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
          {/* דרישות רכש חדשות */}
          <Card>
            <CardHeader>
              <div className="flex justify-between items-center">
                <CardTitle className="flex items-center gap-2">
                  <Plus className="h-5 w-5 text-blue-600" />
                  דרישות רכש חדשות
                </CardTitle>
                <Button size="sm" className="bg-blue-600 hover:bg-blue-700">
                  <Plus className="h-4 w-4 mr-2" />
                  צור אומדן חדש
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {newRequests.map(request => (
                  <div key={request.id} className="border rounded-lg p-4 bg-white shadow-sm">
                    <div className="flex justify-between items-start mb-3">
                      <div>
                        <h3 className="font-semibold text-lg">{request.title}</h3>
                        <p className="text-gray-600 text-sm">{request.description}</p>
                        <p className="text-xs text-gray-500">מחלקה: {request.department}</p>
                        <p className="text-xs text-gray-500">תאריך יעד: {request.deadline}</p>
                      </div>
                      <div className="flex flex-col gap-2">
                        <Badge className={
                          request.priority === 'גבוה' ? 'bg-red-100 text-red-800' :
                          request.priority === 'בינוני' ? 'bg-orange-100 text-orange-800' :
                          'bg-green-100 text-green-800'
                        }>
                          {request.priority}
                        </Badge>
                        <div className="text-sm font-bold text-blue-600">{request.estimatedValue}</div>
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <Button size="sm" className="bg-blue-600 hover:bg-blue-700" onClick={() => setCurrentView('request')}>
                        <FileText className="h-4 w-4 mr-1" />
                        התחל ניתוח AI
                      </Button>
                      <Button size="sm" variant="outline" onClick={() => setCurrentView('research')}>
                        <Search className="h-4 w-4 mr-1" />
                        מחקר שוק
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* האומדנים שלי */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <FileText className="h-5 w-5" />
                האומדנים שלי
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {myEstimates.map(estimate => (
                  <div key={estimate.id} className="border rounded-lg p-4 bg-white shadow-sm">
                    <div className="flex justify-between items-start mb-3">
                      <div>
                        <h3 className="font-semibold text-lg">{estimate.title}</h3>
                        <p className="text-gray-600 text-sm">מספר: {estimate.id}</p>
                        <p className="text-sm text-gray-500">הוגש: {estimate.submittedDate}</p>
                        <p className="text-sm text-gray-500">שיטה: {estimate.estimationMethod}</p>
                      </div>
                      <div className="text-left">
                        <div className="text-xl font-bold text-blue-600">{estimate.amount}</div>
                        <Badge className="bg-orange-100 text-orange-800">{estimate.status}</Badge>
                        <div className="text-sm text-gray-500 mt-1">דיוק: {estimate.accuracy}</div>
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <Button size="sm" variant="outline" onClick={() => setCurrentView('results')}>
                        ערוך אומדן
                      </Button>
                      <Button size="sm" variant="outline">
                        צפה בפרטים
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* כלי עבודה */}
        <Card>
          <CardHeader>
            <CardTitle>כלי עבודה מהירים</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <Button variant="outline" className="h-20 flex flex-col justify-center" onClick={() => setCurrentView('request')}>
                <FileText className="h-6 w-6 mb-2 text-blue-600" />
                <span className="font-medium">ניתוח AI חדש</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center" onClick={() => setCurrentView('research')}>
                <Search className="h-6 w-6 mb-2 text-green-600" />
                <span className="font-medium">מחקר שוק</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <TrendingUp className="h-6 w-6 mb-2 text-purple-600" />
                <span className="font-medium">דוחות רכש</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <AlertCircle className="h-6 w-6 mb-2 text-orange-600" />
                <span className="font-medium">התראות</span>
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default ProcurementDashboard;
```

## שלב 4: יצירת דשבורד קב"ט

צור קובץ חדש: `src/components/SecurityDashboard.jsx`

```javascript
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Shield, AlertTriangle, Eye, FileText, Users, Lock, Activity, CheckCircle } from 'lucide-react';

const SecurityDashboard = ({ onLogout }) => {
  const [securityStats, setSecurityStats] = useState({
    activeAlerts: 3,
    resolvedToday: 7,
    totalUsers: 12,
    systemUptime: '99.9%',
    suspiciousActivities: 2,
    dataBreaches: 0
  });

  const [securityAlerts, setSecurityAlerts] = useState([
    {
      id: 'SEC-001',
      type: 'תוכן רגיש',
      title: 'זיהוי ציון שם יחידה צבאית',
      description: 'זוהה ציון שם יחידה צבאית באומדן REQ-2024-016 - "רכש 10 רכבי צי"',
      severity: 'גבוה',
      timestamp: '2024-01-15 14:30',
      status: 'פתוח',
      source: 'מערכת זיהוי תוכן',
      user: 'משה אברהם'
    },
    {
      id: 'SEC-002',
      type: 'גישה חשודה',
      title: 'ניסיון כניסה מכתובת IP לא מוכרת',
      description: 'זוהה ניסיון כניסה מכתובת IP 185.220.101.42 (TOR Exit Node)',
      severity: 'בינוני',
      timestamp: '2024-01-15 12:15',
      status: 'בטיפול',
      source: 'מערכת זיהוי חדירות',
      user: 'לא ידוע'
    },
    {
      id: 'SEC-003',
      type: 'הרשאות',
      title: 'ניסיון גישה לנתונים ללא הרשאה',
      description: 'משתמש ניסה לגשת לאומדנים שלא יצר',
      severity: 'נמוך',
      timestamp: '2024-01-15 10:45',
      status: 'פתוח',
      source: 'מערכת הרשאות',
      user: 'רחל לוי'
    }
  ]);

  const [auditLogs, setAuditLogs] = useState([
    {
      id: 1,
      user: 'משה אברהם',
      action: 'יצירת אומדן',
      details: 'REQ-2024-016 - רכש 10 רכבי צי',
      timestamp: '2024-01-15 14:25',
      ip: '192.168.1.100',
      status: 'הצלחה',
      riskLevel: 'נמוך'
    },
    {
      id: 2,
      user: 'רחל לוי',
      action: 'אישור אומדן',
      details: 'REQ-2024-015 - ציוד מחשוב',
      timestamp: '2024-01-15 13:45',
      ip: '192.168.1.105',
      status: 'הצלחה',
      riskLevel: 'נמוך'
    },
    {
      id: 3,
      user: 'לא ידוע',
      action: 'ניסיון התחברות',
      details: 'ניסיון התחברות כושל עם שם משתמש admin',
      timestamp: '2024-01-15 12:15',
      ip: '185.220.101.42',
      status: 'כשל',
      riskLevel: 'גבוה'
    }
  ]);

  return (
    <div className="min-h-screen bg-gray-50 rtl">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex justify-between items-center">
            <div className="flex items-center gap-4">
              <Shield className="h-8 w-8 text-red-600" />
              <h1 className="text-2xl font-bold text-gray-900">מרכז בקרת קב"ט</h1>
            </div>
            <div className="flex items-center gap-4">
              <Badge variant="outline" className="bg-red-50 text-red-700 border-red-200">
                <Shield className="h-4 w-4 mr-2" />
                קב"ט
              </Badge>
              <Button variant="outline" size="sm" onClick={onLogout}>
                יציאה
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* סטטיסטיקות ביטחון */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <AlertTriangle className="h-8 w-8 text-red-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">התראות פעילות</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-red-600">{securityStats.activeAlerts}</div>
              <p className="text-sm text-gray-500">דורשות טיפול</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <CheckCircle className="h-8 w-8 text-green-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">טופלו היום</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-green-600">{securityStats.resolvedToday}</div>
              <p className="text-sm text-gray-500">התראות</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Users className="h-8 w-8 text-blue-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">משתמשים פעילים</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-blue-600">{securityStats.totalUsers}</div>
              <p className="text-sm text-gray-500">במערכת</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="text-center pb-2">
              <div className="flex justify-center mb-2">
                <Activity className="h-8 w-8 text-green-600" />
              </div>
              <CardTitle className="text-sm font-medium text-gray-600">זמינות מערכת</CardTitle>
            </CardHeader>
            <CardContent className="text-center">
              <div className="text-3xl font-bold text-green-600">{securityStats.systemUptime}</div>
              <p className="text-sm text-gray-500">החודש</p>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
          {/* התראות ביטחון */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <AlertTriangle className="h-5 w-5 text-red-600" />
                התראות ביטחון פעילות
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {securityAlerts.map(alert => (
                  <div key={alert.id} className="border rounded-lg p-4 bg-white shadow-sm">
                    <div className="flex justify-between items-start mb-3">
                      <div>
                        <h3 className="font-semibold text-lg">{alert.title}</h3>
                        <p className="text-gray-600 text-sm">{alert.description}</p>
                        <p className="text-xs text-gray-500">מקור: {alert.source}</p>
                        <p className="text-xs text-gray-500">משתמש: {alert.user}</p>
                        <p className="text-xs text-gray-500">זמן: {alert.timestamp}</p>
                      </div>
                      <div className="flex flex-col gap-2">
                        <Badge className={
                          alert.severity === 'גבוה' ? 'bg-red-100 text-red-800' :
                          alert.severity === 'בינוני' ? 'bg-orange-100 text-orange-800' :
                          'bg-yellow-100 text-yellow-800'
                        }>
                          {alert.severity}
                        </Badge>
                        <Badge variant="outline" className={
                          alert.status === 'פתוח' ? 'border-red-300 text-red-700' :
                          alert.status === 'בטיפול' ? 'border-orange-300 text-orange-700' :
                          'border-green-300 text-green-700'
                        }>
                          {alert.status}
                        </Badge>
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <Button size="sm" className="bg-red-600 hover:bg-red-700">
                        <Eye className="h-4 w-4 mr-1" />
                        טפל בהתראה
                      </Button>
                      <Button size="sm" variant="outline">
                        צפה בפרטים
                      </Button>
                      <Button size="sm" variant="outline">
                        סגור התראה
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* לוג ביקורת */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <FileText className="h-5 w-5" />
                לוג ביקורת - פעילות אחרונה
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {auditLogs.map(log => (
                  <div key={log.id} className="flex items-start gap-3 p-3 bg-gray-50 rounded-lg">
                    <div className="mt-1">
                      {log.status === 'הצלחה' ? (
                        <CheckCircle className="h-4 w-4 text-green-600" />
                      ) : (
                        <AlertTriangle className="h-4 w-4 text-red-600" />
                      )}
                    </div>
                    <div className="flex-1">
                      <div className="font-medium text-sm">{log.action}</div>
                      <div className="text-xs text-gray-600">{log.details}</div>
                      <div className="text-xs text-gray-500">משתמש: {log.user}</div>
                      <div className="text-xs text-gray-500">IP: {log.ip} | {log.timestamp}</div>
                    </div>
                    <Badge className={
                      log.riskLevel === 'גבוה' ? 'bg-red-100 text-red-800' :
                      log.riskLevel === 'בינוני' ? 'bg-orange-100 text-orange-800' :
                      'bg-green-100 text-green-800'
                    }>
                      {log.riskLevel}
                    </Badge>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* כלי ביטחון */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Lock className="h-5 w-5" />
              כלי ביטחון וניטור
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <Shield className="h-6 w-6 mb-2 text-red-600" />
                <span className="font-medium">מדיניות ביטחון</span>
                <span className="text-xs text-gray-500">הגדרות אבטחה</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <Eye className="h-6 w-6 mb-2 text-blue-600" />
                <span className="font-medium">ניטור פעילות</span>
                <span className="text-xs text-gray-500">מעקב בזמן אמת</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <FileText className="h-6 w-6 mb-2 text-green-600" />
                <span className="font-medium">דוחות ביקורת</span>
                <span className="text-xs text-gray-500">ניתוח מפורט</span>
              </Button>
              <Button variant="outline" className="h-20 flex flex-col justify-center">
                <Users className="h-6 w-6 mb-2 text-purple-600" />
                <span className="font-medium">ניהול הרשאות</span>
                <span className="text-xs text-gray-500">בקרת גישה</span>
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default SecurityDashboard;
```

## שלב 5: עדכון App.jsx לניתוב מותאם

עדכן את `src/App.jsx` להציג את הדשבורד המתאים לכל משתמש:

```javascript
import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import Dashboard from './components/Dashboard';
import ProcurementRequest from './components/ProcurementRequest';
import CostEstimationResults from './components/CostEstimationResults';
import MarketResearch from './components/MarketResearch';
import SystemAdminDashboard from './components/SystemAdminDashboard';
import EconomistDashboard from './components/EconomistDashboard';
import ProcurementDashboard from './components/ProcurementDashboard';
import SecurityDashboard from './components/SecurityDashboard';
import LoginPage from './components/LoginPage';
import './App.css';

function App() {
  const [currentView, setCurrentView] = useState('login');
  const [user, setUser] = useState(null);

  useEffect(() => {
    // בדוק אם יש token שמור
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (token && userData) {
      const parsedUser = JSON.parse(userData);
      setUser(parsedUser);
      setCurrentView(getDashboardByRole(parsedUser.role));
    }
  }, []);

  const getDashboardByRole = (role) => {
    switch (role) {
      case 'system_admin':
        return 'system_admin_dashboard';
      case 'economist':
        return 'economist_dashboard';
      case 'procurement':
        return 'procurement_dashboard';
      case 'security':
        return 'security_dashboard';
      default:
        return 'dashboard';
    }
  };

  const handleLogin = (userData) => {
    setUser(userData);
    localStorage.setItem('user', JSON.stringify(userData));
    setCurrentView(getDashboardByRole(userData.role));
  };

  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    setUser(null);
    setCurrentView('login');
  };

  const views = {
    login: { 
      component: () => <LoginPage onLogin={handleLogin} />, 
      title: 'כניסה למערכת' 
    },
    dashboard: { 
      component: () => <Dashboard onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'לוח מחוונים' 
    },
    system_admin_dashboard: { 
      component: () => <SystemAdminDashboard onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'דשבורד מנהל מערכת' 
    },
    economist_dashboard: { 
      component: () => <EconomistDashboard onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'דשבורד כלכלן' 
    },
    procurement_dashboard: { 
      component: () => <ProcurementDashboard onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'דשבורד איש רכש' 
    },
    security_dashboard: { 
      component: () => <SecurityDashboard onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'דשבורד קב"ט' 
    },
    request: { 
      component: () => <ProcurementRequest onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'דרישת רכש' 
    },
    results: { 
      component: () => <CostEstimationResults onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'תוצאות אומדן' 
    },
    research: { 
      component: () => <MarketResearch onLogout={handleLogout} setCurrentView={setCurrentView} />, 
      title: 'מחקר שוק' 
    }
  };

  const CurrentComponent = views[currentView].component;

  return <CurrentComponent />;
}

export default App;
```

## הנחיות יישום

1. **צור את 4 הקבצים החדשים** - SystemAdminDashboard.jsx, EconomistDashboard.jsx, ProcurementDashboard.jsx, SecurityDashboard.jsx
2. **עדכן את App.jsx** - הוסף את הקומפוננטים החדשים ואת הלוגיקה לניתוב מותאם
3. **וודא שכל הקומפוננטים מקבלים את הפרמטרים הנכונים** - onLogout ו-setCurrentView
4. **בדוק שהאייקונים מ-lucide-react עובדים** - אם לא, החלף באייקונים אחרים או בטקסט

## בדיקות נדרשות

- התחבר עם כל אחד מ-4 המשתמשים
- וודא שכל משתמש רואה את הדשבורד המתאים לתפקידו
- בדוק שהפונקציונליות ייחודית לכל תפקיד מוצגת נכון
- וודא שהניווט בין מסכים עובד (למשל, מדשבורד איש רכש לניתוח AI)

המטרה היא ליצור 4 ממשקים נפרדים ומותאמים שמשקפים את הצרכים הייחודיים של כל תפקיד.

